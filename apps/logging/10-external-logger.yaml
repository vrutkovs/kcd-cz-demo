---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: external-log-forwarder
  namespace: openshift-logging
  annotations:
    argocd.argoproj.io/sync-wave: "4"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lokistack-tenant-logs-role
rules:
- apiGroups:
  - 'loki.grafana.com'
  resources:
  - application
  - infrastructure
  - audit
  resourceNames:
  - logs
  verbs:
  - 'create'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lokistack-tenant-logs-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lokistack-tenant-logs-role
subjects:
- kind: ServiceAccount
  name: external-log-forwarder
  namespace: openshift-logging
---
apiVersion: v1
kind: Secret
metadata:
  name: external-log-forwarder-token
  namespace: openshift-logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
    kubernetes.io/service-account.name: external-log-forwarder
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: store-password-in-vault
  namespace: openshift-logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-exec-logging
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-exec
subjects:
  - kind: ServiceAccount
    name: store-password-in-vault
    namespace: openshift-logging
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "6"
  name: store-token-in-vault
  namespace: openshift-logging
spec:
  template:
    spec:
      containers:
        - image: quay.io/openshift/origin-cli:4.16
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: external-log-forwarder-token
                  key: token
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              oc -n vault exec -ti vault-0 -- bash <<EOF
                set -eux
                export VAULT_ADDR=https://localhost:8200
                export VAULT_SKIP_VERIFY=true
                export VAULT_CACERT=/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
                export VAULT_TOKEN="\$(cat /tmp/vault_token)"
                vault kv put secret/external-log-forwarder token="${TOKEN}"
              EOF
          imagePullPolicy: Always
          name: store-token-in-vault
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: store-password-in-vault
      serviceAccountName: store-password-in-vault
      terminationGracePeriodSeconds: 30
