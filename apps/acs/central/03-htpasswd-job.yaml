apiVersion: v1
kind: ServiceAccount
metadata:
  name: store-password-in-vault
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: vault-exec
  namespace: vault
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
    verbs:
      - create
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-exec-stackrox
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-exec
subjects:
  - kind: ServiceAccount
    name: store-password-in-vault
    namespace: stackrox
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "6"
  name: store-password-in-vault
  namespace: stackrox
spec:
  template:
    spec:
      containers:
        - image: quay.io/openshift/origin-cli:4.16
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: central-htpasswd
                  key: password
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              oc -n vault exec -ti vault-0 -- bash <<EOF
                set -e
                export VAULT_ADDR=https://localhost:8200
                export VAULT_SKIP_VERIFY=true
                export VAULT_CACERT=/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
                export VAULT_TOKEN="\$(cat /tmp/vault_token)"
                vault kv put secret/acs-htpasswd password="${PASSWORD}"
              EOF
          imagePullPolicy: Always
          name: store-password-in-vault
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: store-password-in-vault
      serviceAccountName: store-password-in-vault
      terminationGracePeriodSeconds: 30
